Problem Description
The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer A representing the total number of bits in the code, print the sequence of gray code.

A gray code sequence must begin with 0.



Problem Constraints
1 <= A <= 16



Input Format
The first argument is an integer A.



Output Format
Return an array of integers representing the gray code sequence.



Example Input
Input 1:

A = 2
Input 1:

A = 1


Example Output
output 1:

[0, 1, 3, 2]
output 2:

[0, 1]


Example Explanation
Explanation 1:

for A = 2 the gray code sequence is:
    00 - 0
    01 - 1
    11 - 3
    10 - 2
So, return [0,1,3,2].
Explanation 1:

for A = 1 the gray code sequence is:
    00 - 0
    01 - 1
So, return [0, 1].








Solution :-
=======================================================================================================

Very simple Approach , just take one bit 0, and 1 and add 0 and 1 for example :-


00
01
11
10
000
001
011
010
110
111
101
100

vector<string> generator(int n)
{
    if(n==1)
    {
        return {"0","1"};
    }
    vector<string>ans;
    vector<string>temp=generator(n-1);
    for(int i=0;i<temp.size();i++)
    {
        ans.push_back("0"+temp[i]);         // Append '0' from top to bottom 
    }
    for(int i=temp.size()-1;i>=0;i--)
    {
        ans.push_back("1"+temp[i]);        // Append '1' from bottom to top
    }
    return ans;
}


vector<int> Solution::grayCode(int A) {
    
 vector<string> res=generator(A);
 vector<int>ans;
 for(auto i:res)
 ans.push_back(stoi(i,0,2));    // convert strung intointeger with the help of sting to integer function stoi(char,fromindex, base);

 return ans;
    
}







